<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
     http://www.springframework.org/schema/rabbit
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.7.xsd">

   <!-- <bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.JsonMessageConverter"></bean>


    &lt;!&ndash;virtual host /trade&ndash;&gt;
    <rabbit:connection-factory id="connectionFactory" addresses="mq201.dev.rs.com:5672,mq202.dev.rs.com:5672" username="dev" password="dev_user" virtual-host="/trade"/>
    <rabbit:admin id="admin1" connection-factory="connectionFactory"/>


    <rabbit:queue id="messageDelayQueue" name="messageDelayQueue" durable="true" auto-delete="false" exclusive="false" declared-by="admin1">

    </rabbit:queue>

    <rabbit:direct-exchange id="messageDelayExchange" name="messageDelayExchange" durable="true" auto-delete="false" declared-by="admin1">
        <rabbit:bindings>
            <rabbit:binding queue="messageDelayQueue" />
            &lt;!&ndash;<rabbit:binding queue="messageDelayQueue" pattern="order.delay.notify"/>&ndash;&gt;
        </rabbit:bindings>
    </rabbit:direct-exchange>

    <rabbit:template id="messageDelayAmqpTemplate" exchange="messageDelayExchange" connection-factory="connectionFactory" routing-key="order.delay.notify"/>


    <bean id="messageListener" class=" com.mo.test.rabbit.MessageListener"/>

    <rabbit:listener-container
            connection-factory="connectionFactory"
            acknowledge="manual"
            channel-transacted="false"
            message-converter="jsonMessageConverter">
        <rabbit:listener queues="messageDelayQueue" ref="messageListener" method="onMessage"/>
    </rabbit:listener-container>

    -->


    <rabbit:connection-factory id="connectionFactory" addresses="mq201.dev.rs.com:5672,mq202.dev.rs.com:5672" username="dev" password="dev_user" virtual-host="/trade"/>

    <rabbit:admin connection-factory="connectionFactory" />
    <rabbit:queue name="test_queue" durable="true" auto-delete="false" exclusive="false" />

    <rabbit:queue name="test_delay_queue" durable="true" auto-delete="false" exclusive="false">
        <rabbit:queue-arguments>
            <entry key="x-message-ttl">
                <value  type="java.lang.Long">6000</value>
            </entry>
            <entry key="x-dead-letter-exchange" value="amqpExchange"/>
        </rabbit:queue-arguments>
    </rabbit:queue>
    <!-- 消息对象json转换类 -->
    <bean id="jsonMessageConverter"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />


    <!-- rabbit:direct-exchange：定义exchange模式为direct， 意思就是消息与一个特定的路由键完全匹配，才会转发。
            rabbit:binding：设置消息queue匹配的key -->
    <rabbit:fanout-exchange name="amqpDelayExchange"
                            durable="true" auto-delete="false" id="amqpDelayExchange">
        <rabbit:bindings>
            <rabbit:binding queue="test_delay_queue"/>
        </rabbit:bindings>

    </rabbit:fanout-exchange>

    <rabbit:direct-exchange name="amqpExchange"      durable="true" auto-delete="false" id="amqpExchange">
        <rabbit:bindings>
            <rabbit:binding queue="test_queue" key="test" />
        </rabbit:bindings>

    </rabbit:direct-exchange>


    <!-- spring template声明 -->
    <rabbit:template exchange="amqpExchange" id="amqpTemplate"
                     connection-factory="connectionFactory" message-converter="jsonMessageConverter" />



    <!-- 测试队列 -->
    <bean id="testConsumer"  class="com.mo.test.rabbit.MessageListener"/>

    <rabbit:listener-container
            connection-factory="connectionFactory"
            acknowledge="manual"
            channel-transacted="false"
            message-converter="jsonMessageConverter">
        <rabbit:listener queues="test_queue" ref="testConsumer" method="onMessage"/>
    </rabbit:listener-container>

</beans>